kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.global.name }}-v{{ .Values.global.version.major }}
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: {{ .Values.global.name }}-v{{ .Values.global.version.major }}
    version: "{{ .Values.global.version.major }}.{{ .Values.global.version.minor }}"
  annotations: 
    build-date: "{{ .Values.global.buildDate }}"
spec:
  selector:
    matchLabels:
      app: {{ .Values.global.name }}-v{{ .Values.global.version.major }}
  template:
    metadata:
      labels:
        app: {{ .Values.global.name }}-v{{ .Values.global.version.major }}
    spec:
      serviceAccountName: {{ .Values.global.name }}-v{{ .Values.global.version.major }}
      containers:
        - name: {{ .Values.global.name }}-v{{ .Values.global.version.major }}
          image: "{{ .Values.global.image }}"
          command:
            - "/bin/sh"       
            - "-ce"
            - "/usr/bin/docker-entrypoint.sh minio server /data --address :9000 --console-address :9001"   
          args:
            - server
            - /data
          resources:
            requests:
              cpu: "250m"
              memory: 1Gi
            limits:
              cpu: "500m"
              memory: 2Gi
          ports:
            - name: http
              containerPort:  9000
              protocol: TCP
            - name: http-console
              containerPort:  9001
              protocol: TCP
          env:
            - name: "MINIO_ROOT_USER"
              value: "{{ .Values.env.accessKey }}" 
            - name: "MINIO_ROOT_PASSWORD"
              value: "{{ .Values.env.secretKey }}"
          volumeMounts:
            - mountPath: "{{ .Values.mountPath }}"
              name: "{{ .Values.volumes.name }}"
      volumes:
        - name: "{{ .Values.volumes.name }}"
          persistentVolumeClaim:
            claimName: "{{ .Values.persistentVolumeClaim.claimName }}"

